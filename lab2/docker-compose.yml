version: '3.8'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ELASTIC_JAVA_OPTS}
    ports:
      - "${ELASTIC_PORT}:9200"
    networks:
      - backend
    volumes:
      - esdata:/usr/share/elasticsearch/data

  mongodb:
    image: mongo:${MONGO_VERSION}
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - backend
    volumes:
      - mongodata:/data/db

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  esdata:
  mongodata:
  pgdata:

networks:
  backend:
